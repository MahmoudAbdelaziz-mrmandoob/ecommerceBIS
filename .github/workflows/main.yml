# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master # Change this to your default branch
#   workflow_dispatch:

# jobs:
#    test-runner:
#      runs-on: self-hosted
#      steps:
#        - name: test
#          run: echo "test from runner"

# jobs:
#   build:
#       runs-on: ubuntu-latest
#       container:
#           image: mahmoudabdelaziz22/ssh-operator-base
#           options: --privileged  # Optional: Add privileged mode if needed
          
#       env:
#        SSH_SERVER: "65.21.243.169"
#        SSH_USER: "root"
#        SSH_PASSWORD: "KvLqdmPNhfNaTPq39mVM"
#        APP_NAME: "ecommerce"
       
#       steps:
#         - name: Checkout code
#           uses: actions/checkout@v2
#         - name: Print "Running"
#           run: |
#                  #!/bin/bash
#                  CONNECT_SSH="sshpass -p $SSH_PASSWORD ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER"
#                  ARTIFACTS_PATH="/home/$SSH_USER/operator/$APP_NAME/"

#                  echo -e "\e[1;34m******************************************************************************************\e[0m"
#                  echo -e "\e[1;34m               Start Deploying to http://$SSH_SERVER:8000/ \e[0m"
#                  echo -e "\e[1;34m******************************************************************************************\e[0m"
#                  $CONNECT_SSH "mkdir -p $ARTIFACTS_PATH"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH && git clone https://github.com/MahmoudAbelaziz22/ecommerceBIS.git"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose down"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker rmi ecommerce --force"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose up -d"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose run --user=root app rm -rf vendor composer.lock"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose run --user=root app composer install"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose run --user=root app php artisan key:generate"
#                  $CONNECT_SSH "cd $ARTIFACTS_PATH/ecommerceBIS && docker compose exec -it --user=root app chmod -R 777 /var/www/storage"
      
#                  echo -e "\e[1;34m******************************************************************************************\e[0m"
   
