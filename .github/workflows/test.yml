name: Tests

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_DATABASE: ecommerce
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping"

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '7.4'
      - uses: actions/checkout@v3
      # - name: Copy .env
      #   run: |
      #     cd api
      #     cp .env.ci .env
      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: |
          php artisan key:generate
      - name: Directory Permissions
        run: |
          chmod -R 777 storage bootstrap/cache
      - name: phpstan
        run: |
          composer require --dev phpstan/phpstan
          ./vendor/bin/phpstan analyse --memory-limit=1G --level max app || true
      - name: phpinsights
        run: |
          composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer require nunomaduro/phpinsights:^1.0 --dev --with-all-dependencies
          php artisan vendor:publish --provider="NunoMaduro\PhpInsights\Application\Adapters\Laravel\InsightsServiceProvider"
          php artisan insights --no-interaction --min-quality=90 --min-complexity=90 --min-architecture=90 --min-style=90 --ansi --format=github-action || true
      - name: Run tests
        run: |
          php artisan test
# name: K8s Pipeline

# on:
#   push:
#     branches:
#       - master # Change this to your default branch
#   workflow_dispatch:

# jobs:
#   Build-Docker-Image:
#       runs-on: ubuntu-latest
#       steps:
#         - name: Checkout code
#           uses: actions/checkout@v2
#         - name: Docker login
#           run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
#         - name: Build ecommerce image
#           run: docker build --build-arg user=oday --build-arg uid=1000 -f Dockerfile -t mahmoudabdelaziz22/ecommerce .
#         - name: Push image
#           run: docker push mahmoudabdelaziz22/ecommerce
          
#   Deploy-K8s:
#       runs-on: ubuntu-latest
#       needs: ["Build-Docker-Image"]
#       steps:
#         - name: Checkout code
#           uses: actions/checkout@v2
#         - name: list repo
#           run: ls -al
#         - name: Create kubeconfig
#           run: |
#              mkdir ${HOME}/.kube
#              echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
#              cat ${HOME}/.kube/config
#         - name: kubectl
#           run:  kubectl get nodes
#         - name: Deploy K8s
#           run: kubectl apply -R -f ./k8s
